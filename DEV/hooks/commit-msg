#!/bin/bash

# This hook validates that commit messages respect the conventional commits standard.
#
# It can be configured via the .commit-msg-config.json file at the root of the project.
#
# This script is based off of the following blog post:
# https://dev.to/craicoverflow/enforcing-conventional-commits-using-git-hooks-1o5p#making-the-hook

config=.commit-msg-config.json

# set variables
enabled=$(jq -r .enabled $config)
revert=$(jq -r .revert $config)
types=($(jq -r '.types[]' $config))
min_length=$(jq -r .length.min $config)
max_length=$(jq -r .length.max $config)

if [[ ! -f $config || ! $enabled ]]; then
    exit 0
fi

regexp="${regexp})(\(.+\))?: "
regexp="${regexp}.{$min_length,$max_length}$"

regexp="^[.0-9]+$|"

if $revert; then
		regexp="${regexp}^([Rr]evert|[Mm]erge):? )?.*$|^("
fi

for type in "${types[@]}"
do
	regexp="${regexp}$type|"
done

regexp="${regexp%|})(\(.+\))?: "
regexp="${regexp}.{$min_length,$max_length}$"

msg=$(head -1 $1)

if [[ ! $msg =~ $regexp ]]; then

	printf "\n\n\033[1m\e[41mINVALID COMMIT MESSAGE:\e[0m\n"
  printf "\e[1mValid types:\e[0m ${types[*]}\n"
  printf "\e[1mMax length:\e[0m $max_length\n"
  printf "\e[1mMin length:\e[0m $min_length\n\n"

  # exit with an error
  exit 1
fi
