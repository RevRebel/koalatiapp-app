# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

imports:
    - { resource: 'sessions.yaml' }

parameters:
    test_stub_dir: '%kernel.project_dir%/tests/stub'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            Symfony\Component\Serializer\Serializer $simpleSerializer: '@SimpleSerializer'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # Configure the serializer for entities by default
    SimpleSerializer:
        class: Symfony\Component\Serializer\Serializer
        arguments:
            - ['@DateTimeNormalizer', '@JsonSerializableNormalizer', '@GetSetMethodNormalizer', '@ObjectNormalizer']
            - ['@JsonEncoder']

    Symfony\Component\Serializer\SerializerInterface:
        class: Symfony\Component\Serializer\Serializer
        public: true
        arguments:
            - ['@ProjectNormalizer', '@DefaultNormalizer']
            - ['@JsonEncoder']

    ProjectNormalizer:
        class: App\Serializer\ProjectNormalizer
        tags: [serializer.normalizer]

    DefaultNormalizer:
        class: App\Serializer\DefaultNormalizer
        public: true
        tags: [serializer.normalizer]

    GetSetMethodNormalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags: [serializer.normalizer]

    ObjectNormalizer:
        class: Symfony\Component\Serializer\Normalizer\ObjectNormalizer
        tags: [serializer.normalizer]

    DateTimeNormalizer:
        class: Symfony\Component\Serializer\Normalizer\DateTimeNormalizer
        tags: [serializer.normalizer]

    JsonSerializableNormalizer:
        class: Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer
        tags: [serializer.normalizer]

    JsonEncoder:
        class: Symfony\Component\Serializer\Encoder\JsonEncoder

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Storage\AbstractStorage:
        arguments:
            - '%env(STORAGE_REGION)%'
            - '%env(STORAGE_VERSION)%'
            - '%env(STORAGE_ENDPOINT)%'
            - '%env(STORAGE_AUTH_KEY)%'
            - '%env(STORAGE_AUTH_SECRET)%'
            - '%env(STORAGE_BUCKET)%'
            - '%env(STORAGE_CDN_URL)%'

    App\Storage\ProjectStorage:
        parent:  App\Storage\AbstractStorage

    App\ApiClient\ClientInterface:
        class: 'App\ApiClient\Client'
        arguments:
            - '%env(TOOLS_API_URL)%'
            - '%env(TOOLS_API_BEARER_TOKEN)%'

    App\Util\Screenshot\Driver\ApiFlash:
        arguments:
            - '%env(APIFLASH_ACCESS_KEY)%'

    App\Util\Meta\Driver\UrlMeta:
        arguments:
            - '%env(URLMETA_ACCOUNT_EMAIL)%'
            - '%env(URLMETA_API_KEY)%'

    App\Util\Meta\Driver\OpenGraphIo:
        arguments:
            - '%env(OPENGRAPHIO_API_KEY)%'

    App\Util\Meta\MetaDriverInterface:
        alias: App\Util\Meta\Driver\OpenGraphIo


    ############################
    # Doctrine event listeners #
    ############################
    App\EventListener\OrganizationMemberDeletionListener:
        tags:
            -
                name: 'doctrine.orm.entity_listener'
                event: 'preRemove'
                entity: 'App\Entity\OrganizationMember'
                lazy: true
