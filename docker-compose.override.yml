version: "3.4"

# Development environment override
services:
  php:
    build:
      args:
        APP_ENV: dev
    volumes:
      - ./:/srv/app:rw,cached
      - ./docker/php/conf.d/symfony.dev.ini:/usr/local/etc/php/conf.d/symfony.ini
      # If you develop on Linux, comment out the following volumes to just use bind-mounted project directory from host
      # - ./var:/srv/app/var:rw
    environment:
      APP_ENV: dev
    depends_on:
      - database

  caddy:
    build:
      args:
        APP_ENV: dev
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public:/srv/app/public:ro

  database:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-ChangeMe}
      MYSQL_USER: ${MYSQL_USER:-symfony}
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    volumes:
      - db-data:/var/lib/mysql:rw

  tools-service:
    image: koalati/tools-service
    depends_on:
        - tools-service-database
    environment:
      PORT: 3000
      MOCK_API: 0
      WEBHOOK_HOST: caddy
      WEBHOOK_PATH: /webhook/test-result
      JWT_SECRET: ${TOOLS_API_JWT_SECRET:-ChangeMe123}
      AUTH_ACCESS_TOKEN: ${TOOLS_API_AUTH_ACCESS_TOKEN:-ChangeMe123}
      PGHOST: tools-service-database
      PGUSER: ${TOOLS_API_PGUSER:-postgres}
      PGPASSWORD: ${TOOLS_API_PGPASSWORD:-ChangeMe123}
      PGDATABASE: ${TOOLS_API_PGDATABASE:-postgres}
      PGPORT: 5432
    ports:
    - 3000:3000

  tools-service-database:
    image: postgres:${TOOLS_API_PGVERSION:-13}
    restart: always
    environment:
      POSTGRES_USER: ${TOOLS_API_PGUSER:-postgres}
      POSTGRES_PASSWORD: ${TOOLS_API_PGPASSWORD:-ChangeMe123}
      POSTGRES_DB: ${TOOLS_API_PGDATABASE:-postgres}
    volumes:
      - tools-service-db-data:/var/lib/postgresql:rw
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT:-8080}:8080

volumes:
  tools-service-db-data:
  db-data:
