name: CI

on:
    push:
    pull_request:

jobs:
    coding-standards:
        name: Coding standards
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Cache Composer dependencies
              uses: actions/cache@v2
              with:
                  path: /tmp/composer-cache
                  key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
            - name: Install PHP dependencies (composer install)
              uses: php-actions/composer@v5
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install JS dependencies (npm install)
              run: npm i --ignore-scripts --production=false
            - name: PHP CS Fixer
              run: DEV/ci/php-cs-fixer.sh
            - name: PHP Stan
              run: DEV/ci/phpstan.sh
            - name: PHP MD
              run: DEV/ci/phpmd.sh
            - name: CSS stylelint
              run: DEV/ci/stylelint.sh
            - name: ESLint (JS)
              run: DEV/ci/eslint.sh

    build:
        name: Docker build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Pull images
              run: docker-compose pull
            - uses: satackey/action-docker-layer-caching@v0.0.8
              continue-on-error: true
            - name: Start services
              run: docker-compose up --build -d
            - name: Wait for services
              run: |
                  while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker-compose ps -q php)")"; do
                    case $status in
                      starting) sleep 1;;
                      healthy) exit 0;;
                      unhealthy) exit 1;;
                    esac
                  done
                  exit 1
            - name: Check HTTP reachability
              run: curl http://localhost
            - name: Check HTTPS reachability
              run: curl -k https://localhost
